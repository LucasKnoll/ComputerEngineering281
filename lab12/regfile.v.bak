module regfile(DATAP7, DATAP6, DATAP5, DATAP4, DATAP3, DATAP2, DATAP1, DATAP0, DATAQ7, DATAQ6, DATAQ5, DATAQ4, DATAQ3, DATAQ2, DATAQ1, DATAQ0, RP1, RP0, RQ1, RQ0, WA1, WA0, LD_DATA, WR, CLRN, CLK);
input RP1, RP0, RQ1, RQ0, WA1, WA0, WR, CLRN, CLK;
input[7:0] LD_DATA;
output DATAP7, DATAP6, DATAP5, DATAP4, DATAP3, DATAP2, DATAP1, DATAP0, DATAQ7, DATAQ6, DATAQ5, DATAQ4, DATAQ3, DATAQ2, DATAQ1, DATAQ0;
wire [7:0] DATAP, DATAQ;
wire [7:0] VALUE0, VALUE1, VALUE2, VALUE3, VALUE4, VALUE5, VALUE6, VALUE7;

	Decoder3to8 my_decoder(.EN(WR), .W2(0), .W1(WA1), .W0(WA0), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y4(), .Y5(), .Y6(), .Y7());
	
	register8b my_reg0(.IN(LD_DATA), .LOAD(Y0), .CLK(CLK), .OUT(VALUE0), .CLRN(CLRN));
	register8b my_reg1(.IN(LD_DATA), .LOAD(Y1), .CLK(CLK), .OUT(VALUE1), .CLRN(CLRN));
	register8b my_reg2(.IN(LD_DATA), .LOAD(Y2), .CLK(CLK), .OUT(VALUE2), .CLRN(CLRN));
	register8b my_reg3(.IN(LD_DATA), .LOAD(Y3), .CLK(CLK), .OUT(VALUE3), .CLRN(CLRN));
	
	Mux8_4b my_muxP0(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[0]), .W1(VALUE1[0]), .W2(VALUE2[0]), .W3(VALUE3[0]), .W4(VALUE4[0]), .W5(VALUE5[0]), .W6(VALUE6[0]), .W7(VALUE7[0]), .F(DATAP[0]));
	Mux8_4b my_muxP1(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[1]), .W1(VALUE1[1]), .W2(VALUE2[1]), .W3(VALUE3[1]), .W4(VALUE4[1]), .W5(VALUE5[1]), .W6(VALUE6[1]), .W7(VALUE7[1]), .F(DATAP[1]));
	Mux8_4b my_muxP2(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[2]), .W1(VALUE1[2]), .W2(VALUE2[2]), .W3(VALUE3[2]), .W4(VALUE4[2]), .W5(VALUE5[2]), .W6(VALUE6[2]), .W7(VALUE7[2]), .F(DATAP[2]));
	Mux8_4b my_muxP3(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[3]), .W1(VALUE1[3]), .W2(VALUE2[3]), .W3(VALUE3[3]), .W4(VALUE4[3]), .W5(VALUE5[3]), .W6(VALUE6[3]), .W7(VALUE7[3]), .F(DATAP[3]));
	Mux8_4b my_muxP4(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[4]), .W1(VALUE1[4]), .W2(VALUE2[4]), .W3(VALUE3[4]), .W4(VALUE4[4]), .W5(VALUE5[4]), .W6(VALUE6[4]), .W7(VALUE7[4]), .F(DATAP[4]));
	Mux8_4b my_muxP5(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[5]), .W1(VALUE1[5]), .W2(VALUE2[5]), .W3(VALUE3[5]), .W4(VALUE4[5]), .W5(VALUE5[5]), .W6(VALUE6[5]), .W7(VALUE7[5]), .F(DATAP[5]));
	Mux8_4b my_muxP6(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[6]), .W1(VALUE1[6]), .W2(VALUE2[6]), .W3(VALUE3[6]), .W4(VALUE4[6]), .W5(VALUE5[6]), .W6(VALUE6[6]), .W7(VALUE7[6]), .F(DATAP[6]));
	Mux8_4b my_muxP7(.S2(RP2), .S1(RP1), .S0(RP0), .W0(VALUE0[7]), .W1(VALUE1[7]), .W2(VALUE2[7]), .W3(VALUE3[7]), .W4(VALUE4[7]), .W5(VALUE5[7]), .W6(VALUE6[7]), .W7(VALUE7[7]), .F(DATAP[7]));
	
	Mux8_4b my_muxQ0(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[0]), .W1(VALUE1[0]), .W2(VALUE2[0]), .W3(VALUE3[0]), .W4(VALUE4[0]), .W5(VALUE5[0]), .W6(VALUE6[0]), .W7(VALUE7[0]), .F(DATAQ[0]));
	Mux8_4b my_muxQ1(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[1]), .W1(VALUE1[1]), .W2(VALUE2[1]), .W3(VALUE3[1]), .W4(VALUE4[1]), .W5(VALUE5[1]), .W6(VALUE6[1]), .W7(VALUE7[1]), .F(DATAQ[1]));
	Mux8_4b my_muxQ2(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[2]), .W1(VALUE1[2]), .W2(VALUE2[2]), .W3(VALUE3[2]), .W4(VALUE4[2]), .W5(VALUE5[2]), .W6(VALUE6[2]), .W7(VALUE7[2]), .F(DATAQ[2]));
	Mux8_4b my_muxQ3(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[3]), .W1(VALUE1[3]), .W2(VALUE2[3]), .W3(VALUE3[3]), .W4(VALUE4[3]), .W5(VALUE5[3]), .W6(VALUE6[3]), .W7(VALUE7[3]), .F(DATAQ[3]));
	Mux8_4b my_muxQ4(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[4]), .W1(VALUE1[4]), .W2(VALUE2[4]), .W3(VALUE3[4]), .W4(VALUE4[4]), .W5(VALUE5[4]), .W6(VALUE6[4]), .W7(VALUE7[4]), .F(DATAQ[4]));
	Mux8_4b my_muxQ5(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[5]), .W1(VALUE1[5]), .W2(VALUE2[5]), .W3(VALUE3[5]), .W4(VALUE4[5]), .W5(VALUE5[5]), .W6(VALUE6[5]), .W7(VALUE7[5]), .F(DATAQ[5]));
	Mux8_4b my_muxQ6(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[6]), .W1(VALUE1[6]), .W2(VALUE2[6]), .W3(VALUE3[6]), .W4(VALUE4[6]), .W5(VALUE5[6]), .W6(VALUE6[6]), .W7(VALUE7[6]), .F(DATAQ[6]));
	Mux8_4b my_muxQ7(.S2(RQ2), .S1(RQ1), .S0(RQ0), .W0(VALUE0[7]), .W1(VALUE1[7]), .W2(VALUE2[7]), .W3(VALUE3[7]), .W4(VALUE4[7]), .W5(VALUE5[7]), .W6(VALUE6[7]), .W7(VALUE7[7]), .F(DATAQ[7]));
	
	assign DATAP0 = DATAP[0];
	assign DATAP1 = DATAP[1];
	assign DATAP2 = DATAP[2];
	assign DATAP3 = DATAP[3];
	assign DATAP4 = DATAP[4];
	assign DATAP5 = DATAP[5];
	assign DATAP6 = DATAP[6];
	assign DATAP7 = DATAP[7];
	
	assign DATAQ0 = DATAQ[0];
	assign DATAQ1 = DATAQ[1];
	assign DATAQ2 = DATAQ[2];
	assign DATAQ3 = DATAQ[3];
	assign DATAQ4 = DATAQ[4];
	assign DATAQ5 = DATAQ[5];
	assign DATAQ6 = DATAQ[6];
	assign DATAQ7 = DATAQ[7];
	
endmodule